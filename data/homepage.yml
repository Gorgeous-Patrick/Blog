banner:
  title: <center>Hi there! I am Baichuan Li</center>
  image: https://statics.patrickli.one/blog/profile.jpg

social:
  github: Gorgeous-Patrick
  linkedin: baichuan-li-16a29b237

about:
  enable: true
  content: Master of Computer Science</br>@ University of Michigan
  button:
    btnText: Find out more about me
    URL: "/about"

skill:
  enable: true
  item:
    - title: Linux
      logo: https://statics.patrickli.one/blog/Linux.svg
      description: I use Linux as my main Operating System.
    - title: CUDA
      logo: https://statics.patrickli.one/blog/cuda.jpg
      description: I used CUDA for my term projects of EECS 471.
    - title: Python
      logo: https://statics.patrickli.one/blog/python.svg
      description: I love wrting code. I love Python.
    - title: C / C++
      logo: https://statics.patrickli.one/blog/c-logo.png
      description: I have been writing C and C++ for a long time.
    - title: Docker
      logo: https://statics.patrickli.one/blog/docker.webp
      description: Docker provides the safety for all my services running on my personal server.
    - title: Kubernetes
      logo: https://statics.patrickli.one/blog/kubernetes.svg
      description: I am one of the developers of a Kubernetes Project called Jaseci.
    - title: Flask
      logo: https://statics.patrickli.one/blog/flask.png
      description: I am experienced with Python Flask backend development.
    - title: Unity
      logo: https://statics.patrickli.one/blog/unity.svg
      description: I enrolled in EECS 494 @ University of Michigan, a game development course.
    - title: Dafny Formal Verification
      logo: https://statics.patrickli.one/blog/dafny.jpg
      description: Dafny is a formal verification language.

education:
  enable: true
  item:
    - image: https://statics.patrickli.one/blog/um_logo.svg
      title: Ph.D. of Computer Science
      academy: University of Michigan - Ann Arbor
      year: August 2025 - Now

    - image: https://statics.patrickli.one/blog/um_logo.svg
      title: Master of Computer Science
      academy: University of Michigan - Ann Arbor
      year: August 2023 - April 2025

    - image: https://statics.patrickli.one/blog/um_logo.svg
      title: Bachelor of Computer Science
      academy: University of Michigan - Ann Arbor
      year: August 2021 - April 2023

    - image: https://statics.patrickli.one/blog/sjtu.png
      title: Bachelor of Electrical & Computer Engineering
      academy: Shanghai Jiaotong University
      year: September 2019 - June 2021

publications:
  enable: true
  item:
    - image: https://statics.patrickli.one/blog/portfolio/jaseci.png
      title: "MTP: A Meaning-Typed Language Abstraction for AI-Integrated Programming"
      description: Software development is shifting from traditional programming to AI-integrated applications that leverage generative AI and large language models (LLMs) during runtime. However, integrating LLMs remains complex, requiring developers to manually craft prompts and process outputs. Existing tools attempt to assist with prompt engineering, but often introduce additional complexity. This paper presents Meaning-Typed Programming (MTP), a novel paradigm that abstracts LLM integration through intuitive language-level constructs. By leveraging the inherent semantic richness of code, MTP automates prompt generation and response handling without additional developer effort. We introduce the (1) by operator for seamless LLM invocation, (2) MT-IR, a meaning-based intermediate representation for semantic extraction, and (3) MT-Runtime, an automated system for managing LLM interactions. We implement MTP in Jac, a programming language that supersets Python, and find that MTP significantly reduces coding complexity while maintaining accuracy and efficiency. MTP significantly reduces development complexity, lines of code modifications needed, and costs while improving run-time performance and maintaining or exceeding the accuracy of existing approaches. Our user study shows that developers using MTP completed tasks 3.2x faster with 45% fewer lines of code compared to existing frameworks. Moreover, MTP demonstrates resilience even when up to 50% of naming conventions are degraded, demonstrating robustness to suboptimal code. MTP is developed as part of the Jaseci open-source project, and is available under the module by LLM.
      code_link: https://github.com/Jaseci-Labs/jaseci
